module ahb_top(
input hclk,
input hresetn,
input enable,
input [31:0] data_in_a,
input [31:0] data_in_b,
input [31:0] addr,
input wr,
input [1:0] slave_sel,
output [31:0] data out
);

//master signals

wire [1:0] sel;
wire [31:0] haddr;
wire [3:0] hprot;
wire hwrite; 
wire [2:0] hsize; 
wire [1:0] htrans; 
wire hmastlock;
wire [2:0] hburst;

//slave_1
wire [31:0] hrdata_1; 
wire hreadyout_1;
wire hresp_1;

//slave 2 
wire [31:0] hrdata_2;
wire hreadyout_2;
wire hresp 2;

//slave 3
wire [31:0] hrdata_3;
wire hreadyout_3;
wire hresp_3;

//slave 4
wire [31:0] hrdata_4;
wire hreadyout_4;
wire hresp_4;

//decoder
wire hsel_1;
wire hsel_2;
wire hsel_3;
wire hsel_4;

//multiplexer
wire [3:0] hrdata;
wire hreadyout;
wire hresp;

//ahb master

ahb_master(.hclk(hclk),.hresetn(hresetn),.enable(enable), .data_in_a(data_in_a) ,.data_in_b(data_in_b), .addr(addr),.write(write),.hreadyout(hreadyout) ,.hresp(hresp),.hrdata(hrdata),.slave_sel(slave_sel),

           .sel(sel),.haddr(haddr),.hsize(hsize),.hwrite(hwrite),.hburst(hburst) ,.hprot(hprot),.htrans(htrans),.hmastlock(hmastlock),.hready(hready), .hwdata(hwdata), .data_out(data_out));

//decoder
ahb_decoder decoder(.sel (sel),.hsel_1(hsel_1),.hsel_2 (hsel_2),.hsel_3(hsel_3), .hsel_4 (hsel_4));

//ahb slavel
ahb_slave slave_1(.hclk (hclk),.hresetn (hresetn),.hsel (hsel_1),.haddr (haddr) ,.hwrite(hwrite),.hsize(hsize),.hburst (hburst),.hprot (hprot) ,.htrans (htrans),.hmastlock(hmastlock), .hready (hready) ,.hwdata (hwdata),.hreadyout (hreadyout_1),.hresp(hresp) ,.hrdata (hrdata_1));

//ahb slave2
ahb_slave slave_2(.hclk (hclk),.hresetn (hresetn),.hsel (hsel_2),.haddr (haddr) ,.hwrite(hwrite),.hsize(hsize),.hburst (hburst),.hprot (hprot) ,.htrans (htrans),.hmastlock(hmastlock), .hready (hready) ,.hwdata (hwdata),.hreadyout (hreadyout_2),.hresp(hresp) ,.hrdata (hrdata_2));

//ahb slave3
ahb_slave slave_3(.hclk (hclk),.hresetn (hresetn),.hsel (hsel_3),.haddr (haddr) ,.hwrite(hwrite),.hsize(hsize),.hburst (hburst),.hprot (hprot) ,.htrans (htrans),.hmastlock(hmastlock), .hready (hready) ,.hwdata (hwdata),.hreadyout (hreadyout_3),.hresp(hresp) ,.hrdata (hrdata_3));

//ahb slave 4
ahb_slave slave_4(.hclk (hclk),.hresetn (hresetn),.hsel (hsel_4),.haddr (haddr) ,.hwrite(hwrite),.hsize(hsize),.hburst (hburst),.hprot (hprot) ,.htrans (htrans),.hmastlock(hmastlock), .hready (hready) ,.hwdata (hwdata),.hreadyout (hreadyout_4),.hresp(hresp) ,.hrdata (hrdata_4));

//multiplexer
multiplexer mux(.hrdatal (hrdata_1),.hrdata_2(hrdata_2),.hrdata_3 (hrdata_3) ,.hrdata_4(hrdata_4), .hreadyout_1 (hreadyout_1) ,.hreadyout 2 (hreadyout_2),.hreadyout_3 (hreadyout_3), .hreadyout 4 (hreadyout_4), .hresp_1 (hresp_1),.hresp_2(hresp_2) ,.hresp_3(hresp_3),.hresp_4 (hresp_4),.sel (sel) ,.hrdata (hrdata),.hreadyout (hreadyout),.hresp (hresp));

endmodule
